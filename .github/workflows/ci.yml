name: "JDK specifics CI"
on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'
jobs:
  linux-build-jvm-latest:
    name: Linux - JVM build - Latest Version
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build-dependencies
    strategy:
      matrix:
        java: [ 17, 21 ]
    steps:
      - uses: actions/checkout@v3
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          check-latest: true
          cache: 'maven'
      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Validate format
        run: |
          mvn -V -B -s .github/mvn-settings.xml verify -Dvalidate-format -DskipTests -DskipITs
      - name: Build with Maven
        run: mvn -fae -V -B -s .github/mvn-settings.xml clean verify
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-latest-linux-jvm${{ matrix.java }}.zip '*-reports/*'
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ci-artifacts
          path: artifacts-latest-linux-jvm${{ matrix.java }}.zip
  linux-build-native-latest:
    name: Linux - Native build - Latest Version
    runs-on: ubuntu-latest
    needs: build-dependencies
    strategy:
      matrix:
        java: [ 17, 21 ]
        image: [ "ubi-quarkus-mandrel-builder-image:23.0-java17", "ubi-quarkus-mandrel-builder-image:23.1-java21" ]
        profiles: [ "JDK17", "JDK21"]
    steps:
      - uses: actions/checkout@v3
      - name: Reclaim Disk Space
        run: .github/ci-prerequisites.sh
      - name: Install JDK ${{ matrix.java }}
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Test in Native mode
        run: |
          mvn -fae -V -B -s .github/mvn-settings.xml -P ${{ matrix.profiles }} clean verify -Dnative \
          -Dquarkus.native.builder-image=quay.io/quarkus/${{ matrix.image }}
      - name: Zip Artifacts
        if: failure()
        run: |
          zip -R artifacts-native${{ matrix.java }}.zip '*-reports/*'
      - name: Archive artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ci-artifacts
          path: artifacts-native${{ matrix.java }}.zip
